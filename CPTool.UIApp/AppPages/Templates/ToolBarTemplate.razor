@if (ShowToolBar)
{
    <div class="row" style="margin-bottom: 1rem">
        @*<div class="col-12 col-md-12">
            <RadzenText Text="@TableName" TextStyle="TextStyle.H5" TagName="TagName.H1" style="margin: 0" />
        </div>*@
        <div class="row" style="margin-bottom: 1rem">
            <div class="col-12">
                <RadzenText Text="@($"Selected: {SelectedName}")" TextStyle="TextStyle.Subtitle1" TagName="TagName.H1" style="margin: 0" />
            </div>
        </div>
        <div class="row" style="margin-bottom: 1rem">

            <div class="row">
                <div class="col-12  col-md-6 justify-content-start justify-content-md-start" style="display: flex; align-items: center; flex-wrap: wrap; gap: 0.5rem">

                    @if (ShowAdd)
                    {
                        <ButtonTemplate Disabled=@DisableAdd Icon="add" Click=OnAdd ToolTip="Add new row"></ButtonTemplate>
                    }
                    @if (ShowEdit)
                    {
                        <ButtonTemplate Icon="edit" Disabled=@DisableEdit Click=OnEdit ToolTip="Edit row"></ButtonTemplate>
                    }
                    @if (ShowDelete)
                    {
                        <ButtonTemplate Icon="delete" Disabled=@DisableDelete Click=OnDelete ToolTip="Delete row"></ButtonTemplate>
                    }

                    @if (OtherButtons != null)
                        @OtherButtons



                        @if (ShowReport)
                    {
                        <RadzenSplitButton Icon="get_app" style="margin-left: 10px; margin-bottom: 10px" Click="@OnExportClick" Size=ButtonSize.ExtraSmall
                                   Variant="Variant.Flat" Shade="Shade.Lighter">
                            <RadzenSplitButtonItem Text="Excel" Value="xlsx"  />
                            <RadzenSplitButtonItem Text="CSV" Value="csv" />
                            <RadzenSplitButtonItem Text="pdf" Value="pdf" />
                        </RadzenSplitButton>


                    }
                </div>
               @* <div class="col-12 col-md-6">
                    <RadzenTextBox Placeholder="Search ..." style="display: block; width: 100%" @bind-Value=@Search @oninput="@OnSearch" />
                </div>*@
            </div>

        </div>
    </div>
}

@code {
    void ShowTooltip(ElementReference elementReference, string tooltip, TooltipOptions options = null!) => TooltipService.Open(elementReference, tooltip, options);
    //[Parameter]
    //public string TableName { get; set; }
    [Parameter]
    public string SelectedName { get; set; }
    [Parameter]
    public EventCallback OnAdd { get; set; }
    [Parameter]
    public EventCallback OnEdit { get; set; }

    [Parameter]
    public EventCallback OnDelete { get; set; }
    [Parameter]
    public EventCallback<RadzenSplitButtonItem> OnExportClick { get; set; }

    [Parameter]
    public EventCallback OnPDF { get; set; }
    [Parameter]
    public RenderFragment OtherButtons { get; set; } = null!;

    [Parameter]
    public bool ShowToolBar { get; set; } = true;

    [Parameter]
    public bool ShowAdd { get; set; } = true;
    [Parameter]

    public bool ShowEdit { get; set; } = true;
    [Parameter]

    public bool DisableAdd { get; set; } = false;
    [Parameter]

    public bool DisableEdit { get; set; } = false;
    [Parameter]

    public bool DisableDelete { get; set; } = false;
    [Parameter]

    public bool ShowDelete { get; set; } = true;
    [Parameter]

    public bool ShowReport { get; set; } = true;
    [Parameter]

    public bool DisableReport { get; set; } = false;
    [Parameter]
    public string Search { get; set; } = "";
    [Parameter]
    public EventCallback<string> SearchChanged { get; set; } 

    async Task OnSearch(ChangeEventArgs arg)
    {
        Search = arg.Value.ToString();
        await SearchChanged.InvokeAsync(Search);
    }
}
