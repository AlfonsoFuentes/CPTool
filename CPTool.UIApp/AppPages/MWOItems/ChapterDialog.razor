@using CPTool.ApplicationCQRS.Features.Chapters.Commands.CreateUpdate;
@using CPTool.ApplicationCQRS.Features.MWOItems.Commands.CreateUpdate;
@using CPTool.ApplicationCQRS.Features.UnitaryBasePrizes.Commands.CreateUpdate;
@using CPTool.UIApp.Services;


<Panel>
    <Left>
        <SelectTemplate T="CommandChapter"
                        Elements=@DialogData.Chapters
                        Label="Chapter"
                        Disabled=@(Model.Chapter?.Id!=0)
                        @bind-Model=@Model.Chapter
                        Change="@OnChangeChapter"
                        PropertyName="Name">
        </SelectTemplate>


        <FieldTemplate Label="Nomenclatore" Value="@Model.Nomenclatore"></FieldTemplate>

        <SwitchTemplate Label="Existing?" @bind-Value=@Model.Existing></SwitchTemplate>
        <TextBoxTemplate @bind-Value="@Model.Name" Label="Name" Rows=3></TextBoxTemplate>

        <SelectTemplate T="CommandUnitaryBasePrize"
                        Elements=@DialogData.UnitaryBasePrizes
                        Label="Unitary prize unit"
                        @bind-Model=@Model.UnitaryBasePrize
                        PropertyName="Name">
        </SelectTemplate>


        <NumericTemplate TValue="double" Label="Budget Prize, USD" @bind-Value="@Model.BudgetPrize"></NumericTemplate>

    </Left>
    <Rigth>

    </Rigth>
</Panel>


@if (debug)
{

}

@code {
    bool debug = true;
    [CascadingParameter]
    protected MWOItemDialog DialogParent { get; set; }
    protected CommandMWOItem Model => DialogParent.Model;
    protected MWOItemDialogData DialogData => DialogParent.DialogData;
    async Task OnChangeChapter()
    {
        await DialogParent.ChangeChapter();
    }
}
