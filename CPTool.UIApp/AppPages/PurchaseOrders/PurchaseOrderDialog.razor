@using CPTool.ApplicationCQRS.Features.Brands.Commands.CreateUpdate;
@using CPTool.ApplicationCQRS.Features.PurchaseOrderItems.Commands.CreateUpdate;
@using CPTool.ApplicationCQRS.Features.Suppliers.Commands.CreateUpdate;
@using CPTool.Domain.Enums;
<DialogTemplate Model="@Model" Save="@Save" SaveButtonName="@DialogData.ButtonName" DisableButtonSave=@DisableButtonSave>
    <ChildContent>
        <RadzenTabs Change=@OnChange TabPosition="@tabPosition" Class="width:100%" RenderMode="TabRenderMode.Client">
           
            <Tabs>
                <RadzenTabsItem Text="Purchase Order Name">
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-6">
                            <RadzenCard Class="m-3">
                                @if (Model.Id != 0)
                                {
                                    <TextBoxTemplate Label="PO#"  Disabled=@(Model.PurchaseOrderStatus==PurchaseOrderApprovalStatus.Ordering?false:true)
                                                 @bind-Value=@Model.PONumber >

                                    </TextBoxTemplate>
                                    <DatePickerTamplate Label="Receive date" @bind-Value=@Model.POEstimatedDate Disabled=@(Model.PurchaseOrderStatus==PurchaseOrderApprovalStatus.Ordering?false:true)>

                                    </DatePickerTamplate>
                                }
                                <TextBoxTemplate Label="Name" Rows=3  Disabled=@(Model.Id!=0)
                                                 @bind-Value=@Model.Name >

                                </TextBoxTemplate>
                                <TextBoxTemplate Label="PR Code"  Disabled=@(Model.Id!=0)
                                                 @bind-Value=@Model.PurchaseRequisition >

                                </TextBoxTemplate>
                                <SelectTemplate T="CommandBrand" Elements=@DialogData.Brands Disabled=@(Model.Id!=0)
                                                Label="Brand"
                                                @bind-Model=@Model.pBrand
                                                Change="@(()=>GetSuppliersByBrands(Model.pBrand.Id))"
                                                PropertyName="Name">

                                </SelectTemplate>
                                <SelectTemplate T="CommandSupplier"
                                                Elements=@DialogData.Suppliers
                                                Label="Supplier"
                                                @bind-Model=@Model.pSupplier
                                                Disabled=@(Model.pBrand.Id==0||Model.Id!=0)
                                                PropertyName="Name">

                                </SelectTemplate>

                            </RadzenCard>

                        </div>
                        <div class="col-md-6">
                            <RadzenCard Class="m-3">

                                <FieldTemplate Label="Vendor Code" Value="@Model.VendorCode"></FieldTemplate>
                                <FieldTemplate Label="Tax Code" Value="@Model.TaxCode"></FieldTemplate>
                                <FieldTemplate Label="SPL" Value="@Model.SPL"></FieldTemplate>
                                <FieldTemplate Label="Cost Center" Value="@Model.CostCenter"></FieldTemplate>

                                <SelectEnumTemplate T="Currency" Elements=@(Enum.GetValues<Currency>()) Disabled=@(Model.Id!=0) Label="Currency" @bind-Value=@Model.Currency >

                                </SelectEnumTemplate>
                                @if (Model.Currency == Currency.EUR)
                                {
                                    <NumericTemplate TValue="double" @bind-Value="@Model.USDEUR" Disabled=@(Model.Id!=0)
                                                  Label="$EUR to USD"></NumericTemplate>

                                    <DatePickerTamplate Label="Currency date" @bind-Value=@Model.CurrencyDate Disabled=true>

                                    </DatePickerTamplate>
                                }
                                else if (Model.Currency == Currency.COP)
                                {
                                    <NumericTemplate TValue="double" @bind-Value="@Model.USDCOP" Disabled=@(Model.Id!=0)
                                                  Label="$COP to USD"></NumericTemplate>

                                    <DatePickerTamplate Label="Currency date" @bind-Value=@Model.CurrencyDate Disabled=true>

                                    </DatePickerTamplate>
                                }

                            </RadzenCard>

                        </div>
                    </div>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Purchase Order Items">
                    <div style="margin-bottom: 1rem" class="row">
                        <CascadingValue Value="this">
                            <Panel>
                                <Left>
                                    <PurchaseOrderMWOItemTable></PurchaseOrderMWOItemTable>
                                </Left>
                                <Rigth>
                                    <PurchaseOrderItemTable></PurchaseOrderItemTable>
                                </Rigth>
                            </Panel>
                          

                        </CascadingValue>
                    </div>
                </RadzenTabsItem>

            </Tabs>
        </RadzenTabs>

    </ChildContent>

</DialogTemplate>
@if(debug)
{
    
}

@code {
    bool debug = true;
    void OnChange(int index)
    {

    }
    TabPosition tabPosition = TabPosition.Top;
    TableTemplate<CommandPurchaseOrderItem> purchaseorderitemtable = new();
    public async Task ChangeCurrency(CommandPurchaseOrderItem order, double d)
    {
        order.PrizeCurrency = d;
        await purchaseorderitemtable.SaveRow(order);

    }
}
