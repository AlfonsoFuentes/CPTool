@using CPTool.Application.Features.BrandFeatures.CreateEdit;
@using CPTool.Application.Features.PurchaseOrderFeatures.CreateEdit;
@using CPTool.Application.Features.PurchaseOrderItemFeature.Command.CreateEdit;
@using CPTool.Application.Features.SupplierFeatures.CreateEdit;
@using CPTool.Domain.Enums;

@inherits DialogTemplate<EditPurchaseOrder>
@if (debug)
{

}

<DialogTemplate Model="@Model" SaveButtonName="@ButtonName" DisableButtonSave=@DisableSave Save=SavePurchaseOrder>
    <ChildContent>
        <RadzenTabs Change=@OnChange TabPosition="@tabPosition" Class="width:100%" RenderMode="TabRenderMode.Client">
            <Tabs>
                <RadzenTabsItem Text="Purchase Order Name">
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-6">
                            <RadzenCard Class="m-3">
                                @if (Model.Id != 0)
                                {
                                    <TextBoxTemplate Label="PO#" Required=true Disabled=@(Model.PurchaseOrderStatus==PurchaseOrderApprovalStatus.Ordering?false:true)
                                                 @bind-Value=@Model.PONumber StringsToCompare=@(FilteredList.Select(x => x.PONumber).ToList())>

                                    </TextBoxTemplate>
                                    <DatePickerTamplate Label="Receive date" @bind-Value=@Model.POEstimatedDate Disabled=@(Model.PurchaseOrderStatus==PurchaseOrderApprovalStatus.Ordering?false:true)>

                                    </DatePickerTamplate>
                                }
                                <TextBoxTemplate Label="Name" Rows=3 Required=@(Model.Id==0) Disabled=@(Model.Id!=0)
                                                 @bind-Value=@Model.Name StringsToCompare=@(FilteredList.Select(x => x.Name).ToList())>

                                </TextBoxTemplate>
                                <TextBoxTemplate Label="PR Code" Required=@(Model.Id==0) Disabled=@(Model.Id!=0)
                                                 @bind-Value=@Model.PurchaseRequisition StringsToCompare=@(FilteredList.Select(x => x.PurchaseRequisition).ToList())>

                                </TextBoxTemplate>
                                <SelectTemplate T="EditBrand" Elements=@RadzenTables.Brands Disabled=@(Model.Id!=0)
                                                Label="Brand"
                                                @bind-Model=@Model.pBrand
                                                Required=@(Model.Id==0)
                                                PropertyName="Name">

                                </SelectTemplate>
                                <SelectTemplate T="EditSupplier"
                                                Elements=@(RadzenTables.BrandSuppliers.Where(x=>x.BrandId==Model.pBrand?.Id).Select(x=>x.Supplier).ToList())
                                                Label="Supplier"
                                                @bind-Model=@Model.pSupplier
                                                Required=@(Model.Id==0)
                                                PropertyName="Name">

                                </SelectTemplate>

                            </RadzenCard>

                        </div>
                        <div class="col-md-6">
                            <RadzenCard Class="m-3">

                                <FieldTemplate Label="Vendor Code" Value="@Model.VendorCode"></FieldTemplate>
                                <FieldTemplate Label="Tax Code" Value="@Model.TaxCode"></FieldTemplate>
                                <FieldTemplate Label="SPL" Value="@Model.SPL"></FieldTemplate>
                                <FieldTemplate Label="Cost Center" Value="@(
Model.PurchaseOrderItems.FirstOrDefault()==null?"N/A":
                                Model.PurchaseOrderItems.FirstOrDefault().MWOItem.ChapterId==1?
                                Model.CostCenter:"N/A")"></FieldTemplate>

                                <SelectEnumTemplate T="Currency" Elements=@(Enum.GetValues<Currency>()) Disabled=@(Model.Id!=0) Label="Currency" @bind-Value=@Model.Currency Required=true>

                                </SelectEnumTemplate>
                                @if (Model.Currency == Currency.EUR)
                                {
                                    <NumericTemplate TValue="double" @bind-Value="@Model.USDEUR" Disabled=@(Model.Id!=0)
                                                  Label="$EUR to USD"></NumericTemplate>

                                    <DatePickerTamplate Label="Currency date" @bind-Value=@Model.CurrencyDate Disabled=true>

                                    </DatePickerTamplate>
                                }
                                else if (Model.Currency == Currency.COP)
                                {
                                    <NumericTemplate TValue="double" @bind-Value="@Model.USDCOP" Disabled=@(Model.Id!=0)
                                                  Label="$COP to USD"></NumericTemplate>

                                    <DatePickerTamplate Label="Currency date" @bind-Value=@Model.CurrencyDate Disabled=true>

                                    </DatePickerTamplate>
                                }

                            </RadzenCard>

                        </div>
                    </div>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Purchase Order Items">
                    <div style="margin-bottom: 1rem" class="row">
                        <CascadingValue Value="this">
                            <div class="col-md-6">
                                <PurchaseOrderMWOItemTable @bind-MWOItems="@MWOItemsOriginal"></PurchaseOrderMWOItemTable>

                            </div>


                            <div class="col-md-6">
                                <PurchaseOrderItemTable></PurchaseOrderItemTable>


                            </div>
                        </CascadingValue>
                    </div>
                </RadzenTabsItem>

            </Tabs>
        </RadzenTabs>


    </ChildContent>

</DialogTemplate>
@code {

    bool debug = true;
    void OnChange(int index)
    {

    }
    TabPosition tabPosition = TabPosition.Top;
    TableTemplate<EditPurchaseOrderItem> purchaseorderitemtable = new();
    public async Task ChangeCurrency(EditPurchaseOrderItem order, double d)
    {
        order.PrizeCurrency = d;
        await purchaseorderitemtable.SaveRow(order);

    }
 
}

