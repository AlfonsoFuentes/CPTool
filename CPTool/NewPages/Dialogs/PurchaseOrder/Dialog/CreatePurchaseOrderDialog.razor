@using CPTool.Application.Features.ConnectionTypeFeatures.CreateEdit
@using CPTool.Application.Features.ConnectionTypeFeatures.Query.GetById
@using CPTool.Application.Features.ConnectionTypeFeatures.Query.GetList
@using CPTool.Application.Features.MaterialFeatures.CreateEdit
@using CPTool.Application.Features.MaterialFeatures.Query.GetById
@using CPTool.Application.Features.MaterialFeatures.Query.GetList
@using CPTool.Application.Features.PipeClassFeatures.CreateEdit
@using CPTool.Application.Features.PipeClassFeatures.Query.GetById
@using CPTool.Application.Features.PipeClassFeatures.Query.GetList
@using CPTool.Application.Features.PipeDiameterFeatures.CreateEdit
@using CPTool.Application.Features.PipeDiameterFeatures.Query.GetById
@using CPTool.Application.Features.PipeDiameterFeatures.Query.GetList
@using CPTool.Application.Features.PropertyPackageFeatures.CreateEdit;
@if (debug)
{
    <MudDialog DisableSidePadding="true">
        <DialogContent>
            <MudContainer Style="max-height: 550px; overflow-y: scroll" Fixed="true" MaxWidth="MaxWidth.Medium">
                <MudPaper Class="pa-2 ma-2" Outlined="true" Elevation="0">
                    <CascadingValue Value="this">

                        <MudForm Model="Model" @ref="form">
                            <MudGrid>
                                <MudItem xs="12" sm="6" Class="pa-4">
                                    <TextComponent @bind-Model="@Model.PurchaseOrder"
                                               Label="Purchase Order Name"
                                               Required=true
                                               Validation="@(new Func<string, string>(ValidatePurchaseOrderName))"
                                               PropertyName="Name"></TextComponent>
                                    <TextComponent @bind-Model="@Model.PurchaseOrder"
                                               Label="Purchase requistion Name"
                                               Required=true
                                               Validation="@(new Func<string, string>(ValidatePurchaseRequisition))"
                                               PropertyName="PurchaseRequisition"></TextComponent>
                                    <SelectComponent T="EditBrand"
                                                 Elements=@GlobalTables.Brands
                                                 Label="Brand or Service"
                                                 SelectionChanged="BrandChanged"
                                                 Validation="@(new Func<int, string>(ValidateBrand))"
                                                 Required=true
                                                 @bind-Value="@Model.PurchaseOrder.pBrand">


                                    </SelectComponent>
                                    <SelectComponent T="EditSupplier"
                                                 Elements=@((Model.PurchaseOrder.pBrand==null||Model.PurchaseOrder.pBrand?.Id==0)?new():
                                                 GlobalTables.BrandSuppliers.Where(x=>x.BrandId==Model.PurchaseOrder.pBrand?.Id).Select(x=>x.Supplier).ToList())
                                                 Label="Supplier"
                                                 Required=true
                                                 Validation="@(new Func<int, string>(ValidateSupplier))"
                                                 Disable=@(Model.PurchaseOrder.pBrand?.Id==0?true:false)
                                                 @bind-Value="@Model.PurchaseOrder.pSupplier">


                                    </SelectComponent>

                                </MudItem>
                                <MudItem xs="12" sm="6" Class="pa-4">
                                    <FieldComponent Label="Vendor Code" Value="Model.PurchaseOrder.VendorCode"></FieldComponent>
                                    <FieldComponent Label="Tax Code" Value="Model.PurchaseOrder.TaxCode"></FieldComponent>
                                    <FieldComponent Label="SPL" Value="Model.PurchaseOrder.SPL"></FieldComponent>
                                    @if (Model.FirstMWOItem.ChapterId == 1)
                                    {
                                        <FieldComponent Label="Cost Center" Value="Model.PurchaseOrder.CostCenter"></FieldComponent>

                                    }


                                </MudItem>
                                <MudItem xs="12" sm="12" Class="pa-1">
                                    @if (Model.PurchaseOrder.pSupplier.Id != 0)
                                    {
                                        <MudContainer Style="max-height: 350px; overflow-y: scroll" Fixed="true" MaxWidth="MaxWidth.Medium">
                                            <MudDropContainer T="DropItem" Items="_items" ItemsSelector="@((item,dropzone) => item.Identifier == dropzone)"
                                                      ItemDropped="ItemUpdated" Class="d-flex flex-wrap flex-grow-1">
                                                <ChildContent>

                                                    <MudList Dense="true" Clickable="true" Class="d-flex flex-column flex-grow-1 py-0">
                                                        <MudListSubheader>MWO items in Purchase Order</MudListSubheader>
                                                        <MudDropZone T="DropItem" Identifier="Drop Zone 1" AllowReorder="false" Class="flex-grow-1 border border-solid pa-1" />
                                                    </MudList>
                                                    <MudList Dense="true" Clickable="true" Class="d-flex flex-column flex-grow-1 py-0">
                                                        <MudListSubheader>MWO items in MWO</MudListSubheader>
                                                        <MudDropZone T="DropItem" Identifier="Drop Zone 2" AllowReorder="false" Class="flex-grow-1 border border-solid pa-1" />
                                                    </MudList>






                                                </ChildContent>
                                                <ItemRenderer>
                                                    <MudListItem Text="@context.Name" />

                                                </ItemRenderer>

                                            </MudDropContainer>
                                        </MudContainer>
                                    }

                                </MudItem>
                            </MudGrid>

                        </MudForm>
                    </CascadingValue>



                </MudPaper>
            </MudContainer>
        </DialogContent>
        <DialogActions>

            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="Submit">Save</MudButton>

            <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick="Cancel">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
}
@code {
    bool debug = true;
}
