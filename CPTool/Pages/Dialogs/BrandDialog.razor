@inherits CancellableComponent
@if (viewform)
{
    @*<ComponentBaseDialog TDTO="BrandSupplierDTO" Model="@Model" >
        <Components>
            <ComponentSelect TDTO="SupplierDTO"
                       
                         Label="Supplier Name"
                         Elements=TablesService.Suppliers
                         @bind-Model=@Model.SupplierDTO>


            </ComponentSelect>


            <MudSelect Dense="true"
                   Margin="Margin.Dense"
                   T="BrandType"
                   Label="Select Type Brand or Service"
                   AnchorOrigin="Origin.BottomCenter"
                   @bind-Value=@Model.BrandDTO.BrandType
                   Validation="@(new Func<BrandType, string>(ValidateBrandType))"
                   Variant="Variant.Outlined">
                @foreach (var item in Enum.GetValues<BrandType>())
                {
                    <MudSelectItem Value="item">@item</MudSelectItem>
                }

            </MudSelect>
            @if (Model.BrandDTO.BrandType != BrandType.None)
            {
                <MudTextField @bind-Value="Model.BrandDTO.Name"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense"
                      Immediate="true"
                      Required=true
                      RequiredError=@($"Must Submit {Model.BrandDTO.BrandType.ToString()}")
                      Label=@Model.BrandDTO.BrandType.ToString() />
            }
        </Components>
    </ComponentBaseDialog>
*@
    
}
@code {
    bool viewform = true;
    public IMask mask1 = new RegexMask(@"^[0-9]\d{0,4}$");
   

        }
