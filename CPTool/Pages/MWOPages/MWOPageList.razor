@page "/"
@page "/mwolist"
@implements IDisposable
@inherits CancellableComponent
@if (DatabaseInitialize)
{


    <ComponentOneToManyList MasterTDTO="MWODTO"
                        MasterT="MWO"
                        DetailDTO="MWOItemDTO"
                        DetailT="MWOItem"
                      
                        @bind-SelectedMaster=@SelectedMWO
                        @bind-SelectedDetail=@SelectedMWOItem
                        MasterTableName="MWO"
                        DetailTableName="Items"
                        MasterManager=TablesService.ManMWO
                        DetailManager=TablesService.ManMWOItem
                        OnShowDialogDetail=ToolDialogService.ShowDialogMWOItem
                        OnShowDialogMaster=ToolDialogService.ShowDialogMWO>
        <ContextThMaster>
            <MudTh>MWO Type</MudTh>
            <MudTh>CEC</MudTh>
            <MudTh>Budget, USD</MudTh>
            <MudTh>Expenses, USD</MudTh>
        </ContextThMaster>
        <ContextTdMaster>
            <MudTd DataLabel="MWO Type">@context.MWOTypeDTO.Name</MudTd>
            <MudTd DataLabel="CEC">@context.CECName</MudTd>
            <MudTd DataLabel="Budget">@context.Budget</MudTd>
            <MudTd DataLabel="Expenses">@context.Expenses</MudTd>
        </ContextTdMaster>
        <ContextThDetail>
            <MudTh>Budget, USD</MudTh>
        </ContextThDetail>
        <ContextTdDetail>
            <MudTd DataLabel="Budget">@context.BudgetPrize</MudTd>
        </ContextTdDetail>
        <OtherButtonDetail>
            <MudTooltip Text="Shopping Cart">
                <MudIconButton Icon="@Icons.Filled.AddShoppingCart" Color="Color.Inherit" Disabled=@(SelectedMWOItem.Id==0?true:false) Size="Size.Small" OnClick="AddShoppingCart" />
            </MudTooltip>
        </OtherButtonDetail>
        
    </ComponentOneToManyList>
    

}
@code {
    [CascadingParameter]
    public App App{ get; set; }

    MWODTO SelectedMWO = new();
    MWOItemDTO SelectedMWOItem = new();
    async Task AddShoppingCart()
    {
        PurchaseOrderMWOItemDTO model= new();
        model.PurchaseOrderDTO.MWOItemDTO = SelectedMWOItem;
        model.MWOItemDTO = SelectedMWOItem;
       
        var retorno = await ToolDialogService.ShowPurchaseOrderDialog(model);
    }
    public bool DatabaseInitialize { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (DatabaseInitialize) return;
        await TablesService.Initialize();
        DatabaseInitialize = true;
    }
}



